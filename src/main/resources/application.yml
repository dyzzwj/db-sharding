
# 定义分片规则
spring:
  main:


    # 此配置下 Druid连接池和sharding-jdbc都会注册dataSource，有两种解决方式：

    # 1、允许bean重复定义，覆盖
    # 2、排除Druid自动配置 @SpringBootApplication(exclude = DruidDataSourceAutoConfigure.class)

    # 不允许bean重复注册
    allow‐bean‐definition‐overriding: false

  shardingsphere:
    datasource:
      names: db3,db1,db2

      db1:
        # 定义数据源1
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order_db_1?useUnicode=true&characterEncoding=UTF8
        username: root
        password: dyzwj
      db2:
        # 定义数据源2
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order_db_2?useUnicode=true&characterEncoding=UTF8
        username: root
        password: dyzwj

      db3:
        #定义数据源0
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/user_db?useUnicode=true&characterEncoding=UTF8
        username: root
        password: dyzwj
    sharding:
      tables:
        t_order:
          # 指定t_order表的数据分布情况，配置数据节点，由数据源和数据表组成
          actual-data-nodes: db$->{1..2}.t_order_$->{1..2}

          # 指定t_order表的主键生成策略,包括分片建和分片算法
          key-generator:
            column: order_id
            type: SNOWFLAKE


          # 指定t_order表的分片策略，分片策略包括分片建和分片算法
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_$->{ order_id % 2 + 1}
          database-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: db$->{ user_id % 2 + 1}
        t_user:
          actual-data-nodes: db$->{3}.t_user
          table-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: t_user
    props:
      sql:
        show: true






# 开启驼峰命名
mybatis:
  configuration:
    map-underscore-to-camel-case: true
